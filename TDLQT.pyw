# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'TDLQT.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

import QUERY


class Ui_MainWindow(object):
    
    def setupUi(self, MainWindow):
        
        MainWindow.setObjectName("MainWindow")
        
        MainWindow.resize(751, 471)

        MainWindow.setFixedSize(751, 471)

        MainWindow.setWindowIcon(QtGui.QIcon('ToDoList.png'))
        
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        
        self.centralwidget.setStyleSheet("background-color: #181A1B;")
        
        self.gridLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        
        self.gridLayoutWidget.setGeometry(QtCore.QRect(10, 10, 731, 51))
        
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        
        self.ToolLayout = QtWidgets.QGridLayout(self.gridLayoutWidget)
        
        self.ToolLayout.setContentsMargins(0, 0, 0, 0)
        
        self.TaskLine = QtWidgets.QLineEdit(self.gridLayoutWidget)
        
        
        font = QtGui.QFont()
        
        font.setFamily("Futura Bk")
        
        font.setPointSize(12)
        
        font.setBold(True)
        
        font.setWeight(75)
        
        self.TaskLine.setFont(font)
        
        self.TaskLine.setStyleSheet("color:\"white\";")
        
        self.TaskLine.setMaxLength(32764)
        
        self.TaskLine.setObjectName("TaskLine")
        
        self.ToolLayout.addWidget(self.TaskLine, 0, 2, 1, 1)
        
        self.TODOLIST = QtWidgets.QLabel(self.gridLayoutWidget)
        
        self.TODOLIST.setFont(font)
        self.TODOLIST.setStyleSheet("color:\"white\";")
        self.TODOLIST.setObjectName("TODOLIST")
        self.ToolLayout.addWidget(self.TODOLIST, 0, 0, 1, 1)
        self.MakeButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        
        self.MakeButton.setFont(font)
        
        self.MakeButton.setStyleSheet("color:\"white\";")
        
        self.MakeButton.setObjectName("MakeButton")

        self.MakeButton.clicked.connect(self.DoingTask)
        
        self.ToolLayout.addWidget(self.MakeButton, 0, 4, 1, 1)
        self.FinishButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        
        self.FinishButton.setFont(font)
        self.FinishButton.setStyleSheet("color:\"white\";")
        self.FinishButton.setObjectName("FinishButton")
        self.FinishButton.clicked.connect(self.DidTask)
        self.ToolLayout.addWidget(self.FinishButton, 0, 5, 1, 1)
        self.TASK = QtWidgets.QLabel(self.gridLayoutWidget)
        self.TASK.setFont(font)
        self.TASK.setStyleSheet("color:\"white\";")
        self.TASK.setObjectName("TASK")
        self.ToolLayout.addWidget(self.TASK, 0, 1, 1, 1)
        self.CreateButton = QtWidgets.QPushButton(self.gridLayoutWidget)

        self.CreateButton.clicked.connect(self.CreateTask)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CreateButton.sizePolicy().hasHeightForWidth())
        self.CreateButton.setSizePolicy(sizePolicy)
        self.CreateButton.setFont(font)
        self.CreateButton.setStyleSheet("color:\"white\";")
        self.CreateButton.setObjectName("CreateButton")
        self.ToolLayout.addWidget(self.CreateButton, 0, 3, 1, 1)
        self.ClearButton = QtWidgets.QPushButton(self.gridLayoutWidget)
        
        self.ClearButton.setFont(font)
        self.ClearButton.setStyleSheet("color:\"white\";")
        self.ClearButton.setObjectName("ClearButton")
        self.ClearButton.clicked.connect(self.clearTask)
        self.ToolLayout.addWidget(self.ClearButton, 0, 6, 1, 1)
        self.gridLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.gridLayoutWidget_2.setGeometry(QtCore.QRect(10, 70, 731, 391))
        self.gridLayoutWidget_2.setObjectName("gridLayoutWidget_2")
        self.TableLayout = QtWidgets.QGridLayout(self.gridLayoutWidget_2)
        self.TableLayout.setContentsMargins(0, 0, 0, 0)
        self.TableLayout.setObjectName("TableLayout")
        self.DoingTable = QtWidgets.QTableView(self.gridLayoutWidget_2)
        self.DoingTable.setStyleSheet("QHeaderView::section { background-color:#181A1B;color:\"white\";}*{color:\"white\"}")
        self.DoingHeader = self.DoingTable.horizontalHeader()
        self.DoingHeader.setStretchLastSection(True)
        self.DoingTable.setObjectName("DoingTable")
        self.DoingTable.setModel(QUERY.readData('DOING'))
        self.DoingHeaderY = self.DoingTable.verticalHeader()

       	self.DoingHeaderY.setVisible(False)
        self.TableLayout.addWidget(self.DoingTable, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.TableLayout.addItem(spacerItem, 0, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.TableLayout.addItem(spacerItem1, 0, 4, 1, 1)
        self.DoTable = QtWidgets.QTableView(self.gridLayoutWidget_2)

        self.DoTable.setStyleSheet("color:\"white\";")

        self.DoTable.setStyleSheet("QHeaderView::section { background-color:#181A1B;color:\"white\";}*{color:\"white\"}")
        
        self.DoTable.setObjectName("DoTable")

        self.DoTable.setModel(QUERY.readData('DO'))

        self.DoHeaderX = self.DoTable.horizontalHeader()

        self.DoHeaderX.setStretchLastSection(True)

       	self.DoHeaderY = self.DoTable.verticalHeader()

       	self.DoHeaderY.setVisible(False)

        
        self.TableLayout.addWidget(self.DoTable, 0, 1, 1, 1)
        
        self.DidTable = QtWidgets.QTableView(self.gridLayoutWidget_2)
        
        self.DidTable.setStyleSheet("QHeaderView::section { background-color:#181A1B;color:\"white\";}*{color:\"white\"}")
        
        self.DidTable.setObjectName("DidTable")
        
        self.DidTable.setModel(QUERY.readData('DID'))
        
        self.DidHeader = self.DidTable.horizontalHeader()
        
        self.DidHeaderY = self.DidTable.verticalHeader()

       	self.DidHeaderY.setVisible(False)

        
        self.DidHeader.setStretchLastSection(True)
        
        self.TableLayout.addWidget(self.DidTable, 0, 5, 1, 1)
        
        MainWindow.setCentralWidget(self.centralwidget)
        
        self.retranslateUi(MainWindow)
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        
        _translate = QtCore.QCoreApplication.translate
        
        MainWindow.setWindowTitle(_translate("MainWindow", "ToDoList"))
        
        self.TODOLIST.setText(_translate("MainWindow", "ToDoList"))
        
        self.MakeButton.setText(_translate("MainWindow", "Hacer"))
        
        self.FinishButton.setText(_translate("MainWindow", "Terminar"))
        
        self.TASK.setText(_translate("MainWindow", "Tarea: "))
        
        self.CreateButton.setText(_translate("MainWindow", "Crear"))
        
        self.ClearButton.setText(_translate("MainWindow", "Vaciar Terminado"))

    def update(self):
    	
    	self.DoTable.setModel(QUERY.readData('DO'))
    	
    	self.DoingTable.setModel(QUERY.readData('DOING'))

    	self.DidTable.setModel(QUERY.readData('DID'))

    def CreateTask(self):
    	if self.TaskLine.text() == '':
    		pass

    	else:

	    	QUERY.createTask(self.TaskLine.text())

	    	self.TaskLine.setText('')

	    	self.update()

    def DoingTask(self):
    	try:
	    	x = self.DoTable.selectedIndexes()[0]

	    	y = self.DoTable.model().data(x)

	    	QUERY.doingTask(y)

	    	self.update()

	    	self.TaskLine.setText('')
    	except Exception as IndexError:
    		pass

    def DidTask(self):
    	
    	try:
    		x = self.DoingTable.selectedIndexes()[0]

	    	y = self.DoingTable.model().data(x)

	    	QUERY.didTask(y)

	    	self.update()

	    	self.TaskLine.setText('')
    	except Exception as IndexError:
    		pass

    def clearTask(self):

    	QUERY.clearTask()
    	self.update()
    
if __name__ == "__main__":
    
    import sys
    
    app = QtWidgets.QApplication(sys.argv)
    
    MainWindow = QtWidgets.QMainWindow()
    
    ui = Ui_MainWindow()
    
    ui.setupUi(MainWindow)
    
    MainWindow.show()
    
    sys.exit(app.exec_())